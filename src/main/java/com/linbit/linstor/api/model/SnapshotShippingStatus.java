/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.8.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.Snapshot;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * SnapshotShippingStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-18T05:15:14.614Z[GMT]")
public class SnapshotShippingStatus {
  @JsonProperty("snapshot")
  private Snapshot snapshot = null;

  @JsonProperty("from_node_name")
  private String fromNodeName = null;

  @JsonProperty("to_node_name")
  private String toNodeName = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    RUNNING("running"),
    COMPLETE("complete");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  public SnapshotShippingStatus snapshot(Snapshot snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Get snapshot
   * @return snapshot
  **/
  @Schema(description = "")
  public Snapshot getSnapshot() {
    return snapshot;
  }

  public void setSnapshot(Snapshot snapshot) {
    this.snapshot = snapshot;
  }

  public SnapshotShippingStatus fromNodeName(String fromNodeName) {
    this.fromNodeName = fromNodeName;
    return this;
  }

   /**
   * Get fromNodeName
   * @return fromNodeName
  **/
  @Schema(description = "")
  public String getFromNodeName() {
    return fromNodeName;
  }

  public void setFromNodeName(String fromNodeName) {
    this.fromNodeName = fromNodeName;
  }

  public SnapshotShippingStatus toNodeName(String toNodeName) {
    this.toNodeName = toNodeName;
    return this;
  }

   /**
   * Get toNodeName
   * @return toNodeName
  **/
  @Schema(description = "")
  public String getToNodeName() {
    return toNodeName;
  }

  public void setToNodeName(String toNodeName) {
    this.toNodeName = toNodeName;
  }

  public SnapshotShippingStatus status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotShippingStatus snapshotShippingStatus = (SnapshotShippingStatus) o;
    return Objects.equals(this.snapshot, snapshotShippingStatus.snapshot) &&
        Objects.equals(this.fromNodeName, snapshotShippingStatus.fromNodeName) &&
        Objects.equals(this.toNodeName, snapshotShippingStatus.toNodeName) &&
        Objects.equals(this.status, snapshotShippingStatus.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(snapshot, fromNodeName, toNodeName, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotShippingStatus {\n");
    
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    fromNodeName: ").append(toIndentedString(fromNodeName)).append("\n");
    sb.append("    toNodeName: ").append(toIndentedString(toNodeName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
