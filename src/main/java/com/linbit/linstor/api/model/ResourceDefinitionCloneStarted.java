/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.20.1
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.ApiCallRcList;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Clone request started object
 */
@Schema(description = "Clone request started object")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-03T09:13:01.489Z[GMT]")

public class ResourceDefinitionCloneStarted {
  @JsonProperty("location")
  private String location = null;

  @JsonProperty("source_name")
  private String sourceName = null;

  @JsonProperty("clone_name")
  private String cloneName = null;

  @JsonProperty("messages")
  private ApiCallRcList messages = null;

  public ResourceDefinitionCloneStarted location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Path for clone status
   * @return location
  **/
  @Schema(example = "/v1/resource-definitions/testres/clone/clonedresource", required = true, description = "Path for clone status")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public ResourceDefinitionCloneStarted sourceName(String sourceName) {
    this.sourceName = sourceName;
    return this;
  }

   /**
   * name of the source resource
   * @return sourceName
  **/
  @Schema(required = true, description = "name of the source resource")
  public String getSourceName() {
    return sourceName;
  }

  public void setSourceName(String sourceName) {
    this.sourceName = sourceName;
  }

  public ResourceDefinitionCloneStarted cloneName(String cloneName) {
    this.cloneName = cloneName;
    return this;
  }

   /**
   * name of the clone resource
   * @return cloneName
  **/
  @Schema(required = true, description = "name of the clone resource")
  public String getCloneName() {
    return cloneName;
  }

  public void setCloneName(String cloneName) {
    this.cloneName = cloneName;
  }

  public ResourceDefinitionCloneStarted messages(ApiCallRcList messages) {
    this.messages = messages;
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @Schema(description = "")
  public ApiCallRcList getMessages() {
    return messages;
  }

  public void setMessages(ApiCallRcList messages) {
    this.messages = messages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDefinitionCloneStarted resourceDefinitionCloneStarted = (ResourceDefinitionCloneStarted) o;
    return Objects.equals(this.location, resourceDefinitionCloneStarted.location) &&
        Objects.equals(this.sourceName, resourceDefinitionCloneStarted.sourceName) &&
        Objects.equals(this.cloneName, resourceDefinitionCloneStarted.cloneName) &&
        Objects.equals(this.messages, resourceDefinitionCloneStarted.messages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, sourceName, cloneName, messages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDefinitionCloneStarted {\n");
    
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    sourceName: ").append(toIndentedString(sourceName)).append("\n");
    sb.append("    cloneName: ").append(toIndentedString(cloneName)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
