/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.22.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ScheduleModify
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-02T13:40:09.628252133Z[Etc/UTC]")

public class ScheduleModify {
  @JsonProperty("full_cron")
  private String fullCron = null;

  @JsonProperty("inc_cron")
  private String incCron = null;

  @JsonProperty("keep_local")
  private Integer keepLocal = null;

  @JsonProperty("keep_remote")
  private Integer keepRemote = null;

  /**
   * Gets or Sets onFailure
   */
  public enum OnFailureEnum {
    SKIP("SKIP"),
    RETRY("RETRY");

    private String value;

    OnFailureEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static OnFailureEnum fromValue(String input) {
      for (OnFailureEnum b : OnFailureEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("on_failure")
  private OnFailureEnum onFailure = null;

  @JsonProperty("max_retries")
  private Integer maxRetries = null;

  public ScheduleModify fullCron(String fullCron) {
    this.fullCron = fullCron;
    return this;
  }

   /**
   * Get fullCron
   * @return fullCron
  **/
  @Schema(description = "")
  public String getFullCron() {
    return fullCron;
  }

  public void setFullCron(String fullCron) {
    this.fullCron = fullCron;
  }

  public ScheduleModify incCron(String incCron) {
    this.incCron = incCron;
    return this;
  }

   /**
   * Get incCron
   * @return incCron
  **/
  @Schema(description = "")
  public String getIncCron() {
    return incCron;
  }

  public void setIncCron(String incCron) {
    this.incCron = incCron;
  }

  public ScheduleModify keepLocal(Integer keepLocal) {
    this.keepLocal = keepLocal;
    return this;
  }

   /**
   * the number of snapshots that are basis for a full backup to keep locally
   * @return keepLocal
  **/
  @Schema(description = "the number of snapshots that are basis for a full backup to keep locally")
  public Integer getKeepLocal() {
    return keepLocal;
  }

  public void setKeepLocal(Integer keepLocal) {
    this.keepLocal = keepLocal;
  }

  public ScheduleModify keepRemote(Integer keepRemote) {
    this.keepRemote = keepRemote;
    return this;
  }

   /**
   * the number of full backups to keep at the remote
   * @return keepRemote
  **/
  @Schema(description = "the number of full backups to keep at the remote")
  public Integer getKeepRemote() {
    return keepRemote;
  }

  public void setKeepRemote(Integer keepRemote) {
    this.keepRemote = keepRemote;
  }

  public ScheduleModify onFailure(OnFailureEnum onFailure) {
    this.onFailure = onFailure;
    return this;
  }

   /**
   * Get onFailure
   * @return onFailure
  **/
  @Schema(description = "")
  public OnFailureEnum getOnFailure() {
    return onFailure;
  }

  public void setOnFailure(OnFailureEnum onFailure) {
    this.onFailure = onFailure;
  }

  public ScheduleModify maxRetries(Integer maxRetries) {
    this.maxRetries = maxRetries;
    return this;
  }

   /**
   * how many times a failed backup should be retried if on_failure &#x3D;&#x3D; RETRY
   * @return maxRetries
  **/
  @Schema(description = "how many times a failed backup should be retried if on_failure == RETRY")
  public Integer getMaxRetries() {
    return maxRetries;
  }

  public void setMaxRetries(Integer maxRetries) {
    this.maxRetries = maxRetries;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleModify scheduleModify = (ScheduleModify) o;
    return Objects.equals(this.fullCron, scheduleModify.fullCron) &&
        Objects.equals(this.incCron, scheduleModify.incCron) &&
        Objects.equals(this.keepLocal, scheduleModify.keepLocal) &&
        Objects.equals(this.keepRemote, scheduleModify.keepRemote) &&
        Objects.equals(this.onFailure, scheduleModify.onFailure) &&
        Objects.equals(this.maxRetries, scheduleModify.maxRetries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fullCron, incCron, keepLocal, keepRemote, onFailure, maxRetries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleModify {\n");
    
    sb.append("    fullCron: ").append(toIndentedString(fullCron)).append("\n");
    sb.append("    incCron: ").append(toIndentedString(incCron)).append("\n");
    sb.append("    keepLocal: ").append(toIndentedString(keepLocal)).append("\n");
    sb.append("    keepRemote: ").append(toIndentedString(keepRemote)).append("\n");
    sb.append("    onFailure: ").append(toIndentedString(onFailure)).append("\n");
    sb.append("    maxRetries: ").append(toIndentedString(maxRetries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
