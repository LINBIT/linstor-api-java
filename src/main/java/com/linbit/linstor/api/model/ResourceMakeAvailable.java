/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.8.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.LayerType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ResourceMakeAvailable
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-18T05:15:14.614Z[GMT]")
public class ResourceMakeAvailable {
  @JsonProperty("layer_list")
  private List<LayerType> layerList = null;

  @JsonProperty("diskful")
  private Boolean diskful = false;

  public ResourceMakeAvailable layerList(List<LayerType> layerList) {
    this.layerList = layerList;
    return this;
  }

  public ResourceMakeAvailable addLayerListItem(LayerType layerListItem) {
    if (this.layerList == null) {
      this.layerList = new ArrayList<>();
    }
    this.layerList.add(layerListItem);
    return this;
  }

   /**
   * Get layerList
   * @return layerList
  **/
  @Schema(description = "")
  public List<LayerType> getLayerList() {
    return layerList;
  }

  public void setLayerList(List<LayerType> layerList) {
    this.layerList = layerList;
  }

  public ResourceMakeAvailable diskful(Boolean diskful) {
    this.diskful = diskful;
    return this;
  }

   /**
   * if true resource will be created as diskful even if diskless would be possible
   * @return diskful
  **/
  @Schema(description = "if true resource will be created as diskful even if diskless would be possible")
  public Boolean isDiskful() {
    return diskful;
  }

  public void setDiskful(Boolean diskful) {
    this.diskful = diskful;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceMakeAvailable resourceMakeAvailable = (ResourceMakeAvailable) o;
    return Objects.equals(this.layerList, resourceMakeAvailable.layerList) &&
        Objects.equals(this.diskful, resourceMakeAvailable.diskful);
  }

  @Override
  public int hashCode() {
    return Objects.hash(layerList, diskful);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceMakeAvailable {\n");
    
    sb.append("    layerList: ").append(toIndentedString(layerList)).append("\n");
    sb.append("    diskful: ").append(toIndentedString(diskful)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
