/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.25.1
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.Properties;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Actual snapshot data from a node
 */
@Schema(description = "Actual snapshot data from a node")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-05-08T11:58:50.875992750Z[Etc/UTC]")

public class SnapshotVolumeNode {
  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("vlm_nr")
  private Integer vlmNr = null;

  @JsonProperty("props")
  private Properties props = null;

  @JsonProperty("snapshot_volume_props")
  private Properties snapshotVolumeProps = null;

  @JsonProperty("volume_props")
  private Properties volumeProps = null;

  @JsonProperty("state")
  private String state = null;

  public SnapshotVolumeNode uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * unique object id
   * @return uuid
  **/
  @Schema(example = "e8ef8d6b-17bc-42f0-9367-4aae40c78ecb", description = "unique object id")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public SnapshotVolumeNode vlmNr(Integer vlmNr) {
    this.vlmNr = vlmNr;
    return this;
  }

   /**
   * Volume number of the snapshot
   * @return vlmNr
  **/
  @Schema(description = "Volume number of the snapshot")
  public Integer getVlmNr() {
    return vlmNr;
  }

  public void setVlmNr(Integer vlmNr) {
    this.vlmNr = vlmNr;
  }

  public SnapshotVolumeNode props(Properties props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @Schema(description = "")
  public Properties getProps() {
    return props;
  }

  public void setProps(Properties props) {
    this.props = props;
  }

  public SnapshotVolumeNode snapshotVolumeProps(Properties snapshotVolumeProps) {
    this.snapshotVolumeProps = snapshotVolumeProps;
    return this;
  }

   /**
   * Get snapshotVolumeProps
   * @return snapshotVolumeProps
  **/
  @Schema(description = "")
  public Properties getSnapshotVolumeProps() {
    return snapshotVolumeProps;
  }

  public void setSnapshotVolumeProps(Properties snapshotVolumeProps) {
    this.snapshotVolumeProps = snapshotVolumeProps;
  }

  public SnapshotVolumeNode volumeProps(Properties volumeProps) {
    this.volumeProps = volumeProps;
    return this;
  }

   /**
   * Get volumeProps
   * @return volumeProps
  **/
  @Schema(description = "")
  public Properties getVolumeProps() {
    return volumeProps;
  }

  public void setVolumeProps(Properties volumeProps) {
    this.volumeProps = volumeProps;
  }

  public SnapshotVolumeNode state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Optional state for the given snapshot
   * @return state
  **/
  @Schema(description = "Optional state for the given snapshot")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotVolumeNode snapshotVolumeNode = (SnapshotVolumeNode) o;
    return Objects.equals(this.uuid, snapshotVolumeNode.uuid) &&
        Objects.equals(this.vlmNr, snapshotVolumeNode.vlmNr) &&
        Objects.equals(this.props, snapshotVolumeNode.props) &&
        Objects.equals(this.snapshotVolumeProps, snapshotVolumeNode.snapshotVolumeProps) &&
        Objects.equals(this.volumeProps, snapshotVolumeNode.volumeProps) &&
        Objects.equals(this.state, snapshotVolumeNode.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, vlmNr, props, snapshotVolumeProps, volumeProps, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotVolumeNode {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vlmNr: ").append(toIndentedString(vlmNr)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    snapshotVolumeProps: ").append(toIndentedString(snapshotVolumeProps)).append("\n");
    sb.append("    volumeProps: ").append(toIndentedString(volumeProps)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
