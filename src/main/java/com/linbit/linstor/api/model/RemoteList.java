/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.24.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.EbsRemote;
import com.linbit.linstor.api.model.LinstorRemote;
import com.linbit.linstor.api.model.S3Remote;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * RemoteList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-18T06:34:31.141535853Z[Etc/UTC]")

public class RemoteList {
  @JsonProperty("s3_remotes")
  private List<S3Remote> s3Remotes = null;

  @JsonProperty("linstor_remotes")
  private List<LinstorRemote> linstorRemotes = null;

  @JsonProperty("ebs_remotes")
  private List<EbsRemote> ebsRemotes = null;

  public RemoteList s3Remotes(List<S3Remote> s3Remotes) {
    this.s3Remotes = s3Remotes;
    return this;
  }

  public RemoteList addS3RemotesItem(S3Remote s3RemotesItem) {
    if (this.s3Remotes == null) {
      this.s3Remotes = new ArrayList<>();
    }
    this.s3Remotes.add(s3RemotesItem);
    return this;
  }

   /**
   * Get s3Remotes
   * @return s3Remotes
  **/
  @Schema(description = "")
  public List<S3Remote> getS3Remotes() {
    return s3Remotes;
  }

  public void setS3Remotes(List<S3Remote> s3Remotes) {
    this.s3Remotes = s3Remotes;
  }

  public RemoteList linstorRemotes(List<LinstorRemote> linstorRemotes) {
    this.linstorRemotes = linstorRemotes;
    return this;
  }

  public RemoteList addLinstorRemotesItem(LinstorRemote linstorRemotesItem) {
    if (this.linstorRemotes == null) {
      this.linstorRemotes = new ArrayList<>();
    }
    this.linstorRemotes.add(linstorRemotesItem);
    return this;
  }

   /**
   * Get linstorRemotes
   * @return linstorRemotes
  **/
  @Schema(description = "")
  public List<LinstorRemote> getLinstorRemotes() {
    return linstorRemotes;
  }

  public void setLinstorRemotes(List<LinstorRemote> linstorRemotes) {
    this.linstorRemotes = linstorRemotes;
  }

  public RemoteList ebsRemotes(List<EbsRemote> ebsRemotes) {
    this.ebsRemotes = ebsRemotes;
    return this;
  }

  public RemoteList addEbsRemotesItem(EbsRemote ebsRemotesItem) {
    if (this.ebsRemotes == null) {
      this.ebsRemotes = new ArrayList<>();
    }
    this.ebsRemotes.add(ebsRemotesItem);
    return this;
  }

   /**
   * Get ebsRemotes
   * @return ebsRemotes
  **/
  @Schema(description = "")
  public List<EbsRemote> getEbsRemotes() {
    return ebsRemotes;
  }

  public void setEbsRemotes(List<EbsRemote> ebsRemotes) {
    this.ebsRemotes = ebsRemotes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteList remoteList = (RemoteList) o;
    return Objects.equals(this.s3Remotes, remoteList.s3Remotes) &&
        Objects.equals(this.linstorRemotes, remoteList.linstorRemotes) &&
        Objects.equals(this.ebsRemotes, remoteList.ebsRemotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(s3Remotes, linstorRemotes, ebsRemotes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteList {\n");
    
    sb.append("    s3Remotes: ").append(toIndentedString(s3Remotes)).append("\n");
    sb.append("    linstorRemotes: ").append(toIndentedString(linstorRemotes)).append("\n");
    sb.append("    ebsRemotes: ").append(toIndentedString(ebsRemotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
