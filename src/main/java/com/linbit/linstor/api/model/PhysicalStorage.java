/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.24.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.PhysicalStorageDevice;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * PhysicalStorage
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-18T06:34:31.141535853Z[Etc/UTC]")

public class PhysicalStorage {
  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("rotational")
  private Boolean rotational = null;

  @JsonProperty("nodes")
  private Map<String, List<PhysicalStorageDevice>> nodes = null;

  public PhysicalStorage size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public PhysicalStorage rotational(Boolean rotational) {
    this.rotational = rotational;
    return this;
  }

   /**
   * Get rotational
   * @return rotational
  **/
  @Schema(description = "")
  public Boolean isRotational() {
    return rotational;
  }

  public void setRotational(Boolean rotational) {
    this.rotational = rotational;
  }

  public PhysicalStorage nodes(Map<String, List<PhysicalStorageDevice>> nodes) {
    this.nodes = nodes;
    return this;
  }

  public PhysicalStorage putNodesItem(String key, List<PhysicalStorageDevice> nodesItem) {
    if (this.nodes == null) {
      this.nodes = new HashMap<>();
    }
    this.nodes.put(key, nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Schema(description = "")
  public Map<String, List<PhysicalStorageDevice>> getNodes() {
    return nodes;
  }

  public void setNodes(Map<String, List<PhysicalStorageDevice>> nodes) {
    this.nodes = nodes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhysicalStorage physicalStorage = (PhysicalStorage) o;
    return Objects.equals(this.size, physicalStorage.size) &&
        Objects.equals(this.rotational, physicalStorage.rotational) &&
        Objects.equals(this.nodes, physicalStorage.nodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, rotational, nodes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhysicalStorage {\n");
    
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    rotational: ").append(toIndentedString(rotational)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
