/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.8.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.Properties;
import com.linbit.linstor.api.model.ResourceDefinitionLayer;
import com.linbit.linstor.api.model.VolumeDefinition;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ResourceDefinition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-18T05:15:14.614Z[GMT]")
public class ResourceDefinition {
  @JsonProperty("name")
  private String name = "";

  @JsonProperty("external_name")
  private String externalName = null;

  @JsonProperty("props")
  private Properties props = null;

  @JsonProperty("flags")
  private List<String> flags = null;

  @JsonProperty("layer_data")
  private List<ResourceDefinitionLayer> layerData = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("resource_group_name")
  private String resourceGroupName = null;

  @JsonProperty("volume_definitions")
  private List<VolumeDefinition> volumeDefinitions = null;

  public ResourceDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "rsc1", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResourceDefinition externalName(String externalName) {
    this.externalName = externalName;
    return this;
  }

   /**
   * External name can be used to have native resource names. If you need to store a non Linstor compatible resource name use this field and Linstor will generate a compatible name. 
   * @return externalName
  **/
  @Schema(description = "External name can be used to have native resource names. If you need to store a non Linstor compatible resource name use this field and Linstor will generate a compatible name. ")
  public String getExternalName() {
    return externalName;
  }

  public void setExternalName(String externalName) {
    this.externalName = externalName;
  }

  public ResourceDefinition props(Properties props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @Schema(description = "")
  public Properties getProps() {
    return props;
  }

  public void setProps(Properties props) {
    this.props = props;
  }

  public ResourceDefinition flags(List<String> flags) {
    this.flags = flags;
    return this;
  }

  public ResourceDefinition addFlagsItem(String flagsItem) {
    if (this.flags == null) {
      this.flags = new ArrayList<>();
    }
    this.flags.add(flagsItem);
    return this;
  }

   /**
   * Get flags
   * @return flags
  **/
  @Schema(description = "")
  public List<String> getFlags() {
    return flags;
  }

  public void setFlags(List<String> flags) {
    this.flags = flags;
  }

  public ResourceDefinition layerData(List<ResourceDefinitionLayer> layerData) {
    this.layerData = layerData;
    return this;
  }

  public ResourceDefinition addLayerDataItem(ResourceDefinitionLayer layerDataItem) {
    if (this.layerData == null) {
      this.layerData = new ArrayList<>();
    }
    this.layerData.add(layerDataItem);
    return this;
  }

   /**
   * Get layerData
   * @return layerData
  **/
  @Schema(description = "")
  public List<ResourceDefinitionLayer> getLayerData() {
    return layerData;
  }

  public void setLayerData(List<ResourceDefinitionLayer> layerData) {
    this.layerData = layerData;
  }

  public ResourceDefinition uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * unique object id
   * @return uuid
  **/
  @Schema(example = "e8ef8d6b-17bc-42f0-9367-4aae40c78ecb", description = "unique object id")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ResourceDefinition resourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
    return this;
  }

   /**
   * name of the linked resource group, if there is a link
   * @return resourceGroupName
  **/
  @Schema(description = "name of the linked resource group, if there is a link")
  public String getResourceGroupName() {
    return resourceGroupName;
  }

  public void setResourceGroupName(String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
  }

  public ResourceDefinition volumeDefinitions(List<VolumeDefinition> volumeDefinitions) {
    this.volumeDefinitions = volumeDefinitions;
    return this;
  }

  public ResourceDefinition addVolumeDefinitionsItem(VolumeDefinition volumeDefinitionsItem) {
    if (this.volumeDefinitions == null) {
      this.volumeDefinitions = new ArrayList<>();
    }
    this.volumeDefinitions.add(volumeDefinitionsItem);
    return this;
  }

   /**
   * Get volumeDefinitions
   * @return volumeDefinitions
  **/
  @Schema(description = "")
  public List<VolumeDefinition> getVolumeDefinitions() {
    return volumeDefinitions;
  }

  public void setVolumeDefinitions(List<VolumeDefinition> volumeDefinitions) {
    this.volumeDefinitions = volumeDefinitions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceDefinition resourceDefinition = (ResourceDefinition) o;
    return Objects.equals(this.name, resourceDefinition.name) &&
        Objects.equals(this.externalName, resourceDefinition.externalName) &&
        Objects.equals(this.props, resourceDefinition.props) &&
        Objects.equals(this.flags, resourceDefinition.flags) &&
        Objects.equals(this.layerData, resourceDefinition.layerData) &&
        Objects.equals(this.uuid, resourceDefinition.uuid) &&
        Objects.equals(this.resourceGroupName, resourceDefinition.resourceGroupName) &&
        Objects.equals(this.volumeDefinitions, resourceDefinition.volumeDefinitions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, externalName, props, flags, layerData, uuid, resourceGroupName, volumeDefinitions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceDefinition {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    externalName: ").append(toIndentedString(externalName)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    layerData: ").append(toIndentedString(layerData)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    resourceGroupName: ").append(toIndentedString(resourceGroupName)).append("\n");
    sb.append("    volumeDefinitions: ").append(toIndentedString(volumeDefinitions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
