/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.24.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.LayerType;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * VolumeLayer
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-18T06:34:31.141535853Z[Etc/UTC]")

public class VolumeLayer {
  @JsonProperty("type")
  private LayerType type = null;

  @com.fasterxml.jackson.annotation.JsonTypeInfo(
          use = com.fasterxml.jackson.annotation.JsonTypeInfo.Id.NAME,
          include = com.fasterxml.jackson.annotation.JsonTypeInfo.As.EXTERNAL_PROPERTY,
          property = "type"
  )
  @com.fasterxml.jackson.annotation.JsonSubTypes({
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = DrbdVolume.class, name = "DRBD"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = StorageVolume.class, name = "STORAGE"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = CacheVolume.class, name = "CACHE"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = LUKSVolume.class, name = "LUKS"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = NVMEVolume.class, name = "NVME"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = WritecacheVolume.class, name = "WRITECACHE"),
          @com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = BCacheVolume.class, name = "BCACHE")
  })
  @JsonProperty("data")
  private OneOfVolumeLayerData data = null;

  public VolumeLayer type(LayerType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public LayerType getType() {
    return type;
  }

  public void setType(LayerType type) {
    this.type = type;
  }

  public VolumeLayer data(OneOfVolumeLayerData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public OneOfVolumeLayerData getData() {
    return data;
  }

  public void setData(OneOfVolumeLayerData data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeLayer volumeLayer = (VolumeLayer) o;
    return Objects.equals(this.type, volumeLayer.type) &&
        Objects.equals(this.data, volumeLayer.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeLayer {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
