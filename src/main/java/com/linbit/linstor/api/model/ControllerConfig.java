/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.6.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.ControllerConfigConfig;
import com.linbit.linstor.api.model.ControllerConfigDb;
import com.linbit.linstor.api.model.ControllerConfigDebug;
import com.linbit.linstor.api.model.ControllerConfigHttp;
import com.linbit.linstor.api.model.ControllerConfigHttps;
import com.linbit.linstor.api.model.ControllerConfigLdap;
import com.linbit.linstor.api.model.ControllerConfigLog;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ControllerConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-02-05T10:27:33.226Z[GMT]")
public class ControllerConfig {
  @JsonProperty("config")
  private ControllerConfigConfig config = null;

  @JsonProperty("debug")
  private ControllerConfigDebug debug = null;

  @JsonProperty("log")
  private ControllerConfigLog log = null;

  @JsonProperty("db")
  private ControllerConfigDb db = null;

  @JsonProperty("http")
  private ControllerConfigHttp http = null;

  @JsonProperty("https")
  private ControllerConfigHttps https = null;

  @JsonProperty("ldap")
  private ControllerConfigLdap ldap = null;

  public ControllerConfig config(ControllerConfigConfig config) {
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @Schema(description = "")
  public ControllerConfigConfig getConfig() {
    return config;
  }

  public void setConfig(ControllerConfigConfig config) {
    this.config = config;
  }

  public ControllerConfig debug(ControllerConfigDebug debug) {
    this.debug = debug;
    return this;
  }

   /**
   * Get debug
   * @return debug
  **/
  @Schema(description = "")
  public ControllerConfigDebug getDebug() {
    return debug;
  }

  public void setDebug(ControllerConfigDebug debug) {
    this.debug = debug;
  }

  public ControllerConfig log(ControllerConfigLog log) {
    this.log = log;
    return this;
  }

   /**
   * Get log
   * @return log
  **/
  @Schema(description = "")
  public ControllerConfigLog getLog() {
    return log;
  }

  public void setLog(ControllerConfigLog log) {
    this.log = log;
  }

  public ControllerConfig db(ControllerConfigDb db) {
    this.db = db;
    return this;
  }

   /**
   * Get db
   * @return db
  **/
  @Schema(description = "")
  public ControllerConfigDb getDb() {
    return db;
  }

  public void setDb(ControllerConfigDb db) {
    this.db = db;
  }

  public ControllerConfig http(ControllerConfigHttp http) {
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @Schema(description = "")
  public ControllerConfigHttp getHttp() {
    return http;
  }

  public void setHttp(ControllerConfigHttp http) {
    this.http = http;
  }

  public ControllerConfig https(ControllerConfigHttps https) {
    this.https = https;
    return this;
  }

   /**
   * Get https
   * @return https
  **/
  @Schema(description = "")
  public ControllerConfigHttps getHttps() {
    return https;
  }

  public void setHttps(ControllerConfigHttps https) {
    this.https = https;
  }

  public ControllerConfig ldap(ControllerConfigLdap ldap) {
    this.ldap = ldap;
    return this;
  }

   /**
   * Get ldap
   * @return ldap
  **/
  @Schema(description = "")
  public ControllerConfigLdap getLdap() {
    return ldap;
  }

  public void setLdap(ControllerConfigLdap ldap) {
    this.ldap = ldap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ControllerConfig controllerConfig = (ControllerConfig) o;
    return Objects.equals(this.config, controllerConfig.config) &&
        Objects.equals(this.debug, controllerConfig.debug) &&
        Objects.equals(this.log, controllerConfig.log) &&
        Objects.equals(this.db, controllerConfig.db) &&
        Objects.equals(this.http, controllerConfig.http) &&
        Objects.equals(this.https, controllerConfig.https) &&
        Objects.equals(this.ldap, controllerConfig.ldap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(config, debug, log, db, http, https, ldap);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ControllerConfig {\n");
    
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    debug: ").append(toIndentedString(debug)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    db: ").append(toIndentedString(db)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    https: ").append(toIndentedString(https)).append("\n");
    sb.append("    ldap: ").append(toIndentedString(ldap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
