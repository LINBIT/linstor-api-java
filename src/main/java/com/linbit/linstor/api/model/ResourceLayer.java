/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.10.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.BCacheResource;
import com.linbit.linstor.api.model.CacheResource;
import com.linbit.linstor.api.model.DrbdResource;
import com.linbit.linstor.api.model.LUKSResource;
import com.linbit.linstor.api.model.LayerType;
import com.linbit.linstor.api.model.NVMEResource;
import com.linbit.linstor.api.model.OpenflexResource;
import com.linbit.linstor.api.model.ResourceLayer;
import com.linbit.linstor.api.model.StorageResource;
import com.linbit.linstor.api.model.WritecacheResource;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * ResourceLayer
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-08-31T11:02:45.596Z[GMT]")
public class ResourceLayer {
  @JsonProperty("children")
  private List<ResourceLayer> children = null;

  @JsonProperty("resource_name_suffix")
  private String resourceNameSuffix = null;

  @JsonProperty("type")
  private LayerType type = null;

  @JsonProperty("drbd")
  private DrbdResource drbd = null;

  @JsonProperty("luks")
  private LUKSResource luks = null;

  @JsonProperty("storage")
  private StorageResource storage = null;

  @JsonProperty("nvme")
  private NVMEResource nvme = null;

  @JsonProperty("openflex")
  private OpenflexResource openflex = null;

  @JsonProperty("writecache")
  private WritecacheResource writecache = null;

  @JsonProperty("cache")
  private CacheResource cache = null;

  @JsonProperty("bcache")
  private BCacheResource bcache = null;

  public ResourceLayer children(List<ResourceLayer> children) {
    this.children = children;
    return this;
  }

  public ResourceLayer addChildrenItem(ResourceLayer childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @Schema(description = "")
  public List<ResourceLayer> getChildren() {
    return children;
  }

  public void setChildren(List<ResourceLayer> children) {
    this.children = children;
  }

  public ResourceLayer resourceNameSuffix(String resourceNameSuffix) {
    this.resourceNameSuffix = resourceNameSuffix;
    return this;
  }

   /**
   * Get resourceNameSuffix
   * @return resourceNameSuffix
  **/
  @Schema(description = "")
  public String getResourceNameSuffix() {
    return resourceNameSuffix;
  }

  public void setResourceNameSuffix(String resourceNameSuffix) {
    this.resourceNameSuffix = resourceNameSuffix;
  }

  public ResourceLayer type(LayerType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public LayerType getType() {
    return type;
  }

  public void setType(LayerType type) {
    this.type = type;
  }

  public ResourceLayer drbd(DrbdResource drbd) {
    this.drbd = drbd;
    return this;
  }

   /**
   * Get drbd
   * @return drbd
  **/
  @Schema(description = "")
  public DrbdResource getDrbd() {
    return drbd;
  }

  public void setDrbd(DrbdResource drbd) {
    this.drbd = drbd;
  }

  public ResourceLayer luks(LUKSResource luks) {
    this.luks = luks;
    return this;
  }

   /**
   * Get luks
   * @return luks
  **/
  @Schema(description = "")
  public LUKSResource getLuks() {
    return luks;
  }

  public void setLuks(LUKSResource luks) {
    this.luks = luks;
  }

  public ResourceLayer storage(StorageResource storage) {
    this.storage = storage;
    return this;
  }

   /**
   * Get storage
   * @return storage
  **/
  @Schema(description = "")
  public StorageResource getStorage() {
    return storage;
  }

  public void setStorage(StorageResource storage) {
    this.storage = storage;
  }

  public ResourceLayer nvme(NVMEResource nvme) {
    this.nvme = nvme;
    return this;
  }

   /**
   * Get nvme
   * @return nvme
  **/
  @Schema(description = "")
  public NVMEResource getNvme() {
    return nvme;
  }

  public void setNvme(NVMEResource nvme) {
    this.nvme = nvme;
  }

  public ResourceLayer openflex(OpenflexResource openflex) {
    this.openflex = openflex;
    return this;
  }

   /**
   * Get openflex
   * @return openflex
  **/
  @Schema(description = "")
  public OpenflexResource getOpenflex() {
    return openflex;
  }

  public void setOpenflex(OpenflexResource openflex) {
    this.openflex = openflex;
  }

  public ResourceLayer writecache(WritecacheResource writecache) {
    this.writecache = writecache;
    return this;
  }

   /**
   * Get writecache
   * @return writecache
  **/
  @Schema(description = "")
  public WritecacheResource getWritecache() {
    return writecache;
  }

  public void setWritecache(WritecacheResource writecache) {
    this.writecache = writecache;
  }

  public ResourceLayer cache(CacheResource cache) {
    this.cache = cache;
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Schema(description = "")
  public CacheResource getCache() {
    return cache;
  }

  public void setCache(CacheResource cache) {
    this.cache = cache;
  }

  public ResourceLayer bcache(BCacheResource bcache) {
    this.bcache = bcache;
    return this;
  }

   /**
   * Get bcache
   * @return bcache
  **/
  @Schema(description = "")
  public BCacheResource getBcache() {
    return bcache;
  }

  public void setBcache(BCacheResource bcache) {
    this.bcache = bcache;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceLayer resourceLayer = (ResourceLayer) o;
    return Objects.equals(this.children, resourceLayer.children) &&
        Objects.equals(this.resourceNameSuffix, resourceLayer.resourceNameSuffix) &&
        Objects.equals(this.type, resourceLayer.type) &&
        Objects.equals(this.drbd, resourceLayer.drbd) &&
        Objects.equals(this.luks, resourceLayer.luks) &&
        Objects.equals(this.storage, resourceLayer.storage) &&
        Objects.equals(this.nvme, resourceLayer.nvme) &&
        Objects.equals(this.openflex, resourceLayer.openflex) &&
        Objects.equals(this.writecache, resourceLayer.writecache) &&
        Objects.equals(this.cache, resourceLayer.cache) &&
        Objects.equals(this.bcache, resourceLayer.bcache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(children, resourceNameSuffix, type, drbd, luks, storage, nvme, openflex, writecache, cache, bcache);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceLayer {\n");
    
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    resourceNameSuffix: ").append(toIndentedString(resourceNameSuffix)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    drbd: ").append(toIndentedString(drbd)).append("\n");
    sb.append("    luks: ").append(toIndentedString(luks)).append("\n");
    sb.append("    storage: ").append(toIndentedString(storage)).append("\n");
    sb.append("    nvme: ").append(toIndentedString(nvme)).append("\n");
    sb.append("    openflex: ").append(toIndentedString(openflex)).append("\n");
    sb.append("    writecache: ").append(toIndentedString(writecache)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    bcache: ").append(toIndentedString(bcache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
