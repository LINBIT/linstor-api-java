/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.20.1
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * BackupRestore
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-10-03T09:13:01.489Z[GMT]")

public class BackupRestore {
  @JsonProperty("src_rsc_name")
  private String srcRscName = null;

  @JsonProperty("src_snap_name")
  private String srcSnapName = null;

  @JsonProperty("last_backup")
  private String lastBackup = null;

  @JsonProperty("stor_pool_map")
  private Map<String, String> storPoolMap = null;

  @JsonProperty("target_rsc_name")
  private String targetRscName = null;

  @JsonProperty("passphrase")
  private String passphrase = null;

  @JsonProperty("node_name")
  private String nodeName = null;

  @JsonProperty("download_only")
  private Boolean downloadOnly = false;

  public BackupRestore srcRscName(String srcRscName) {
    this.srcRscName = srcRscName;
    return this;
  }

   /**
   * Get srcRscName
   * @return srcRscName
  **/
  @Schema(description = "")
  public String getSrcRscName() {
    return srcRscName;
  }

  public void setSrcRscName(String srcRscName) {
    this.srcRscName = srcRscName;
  }

  public BackupRestore srcSnapName(String srcSnapName) {
    this.srcSnapName = srcSnapName;
    return this;
  }

   /**
   * Get srcSnapName
   * @return srcSnapName
  **/
  @Schema(description = "")
  public String getSrcSnapName() {
    return srcSnapName;
  }

  public void setSrcSnapName(String srcSnapName) {
    this.srcSnapName = srcSnapName;
  }

  public BackupRestore lastBackup(String lastBackup) {
    this.lastBackup = lastBackup;
    return this;
  }

   /**
   * Get lastBackup
   * @return lastBackup
  **/
  @Schema(description = "")
  public String getLastBackup() {
    return lastBackup;
  }

  public void setLastBackup(String lastBackup) {
    this.lastBackup = lastBackup;
  }

  public BackupRestore storPoolMap(Map<String, String> storPoolMap) {
    this.storPoolMap = storPoolMap;
    return this;
  }

  public BackupRestore putStorPoolMapItem(String key, String storPoolMapItem) {
    if (this.storPoolMap == null) {
      this.storPoolMap = new HashMap<>();
    }
    this.storPoolMap.put(key, storPoolMapItem);
    return this;
  }

   /**
   * Get storPoolMap
   * @return storPoolMap
  **/
  @Schema(description = "")
  public Map<String, String> getStorPoolMap() {
    return storPoolMap;
  }

  public void setStorPoolMap(Map<String, String> storPoolMap) {
    this.storPoolMap = storPoolMap;
  }

  public BackupRestore targetRscName(String targetRscName) {
    this.targetRscName = targetRscName;
    return this;
  }

   /**
   * Get targetRscName
   * @return targetRscName
  **/
  @Schema(required = true, description = "")
  public String getTargetRscName() {
    return targetRscName;
  }

  public void setTargetRscName(String targetRscName) {
    this.targetRscName = targetRscName;
  }

  public BackupRestore passphrase(String passphrase) {
    this.passphrase = passphrase;
    return this;
  }

   /**
   * Get passphrase
   * @return passphrase
  **/
  @Schema(description = "")
  public String getPassphrase() {
    return passphrase;
  }

  public void setPassphrase(String passphrase) {
    this.passphrase = passphrase;
  }

  public BackupRestore nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @Schema(required = true, description = "")
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }

  public BackupRestore downloadOnly(Boolean downloadOnly) {
    this.downloadOnly = downloadOnly;
    return this;
  }

   /**
   * Get downloadOnly
   * @return downloadOnly
  **/
  @Schema(description = "")
  public Boolean isDownloadOnly() {
    return downloadOnly;
  }

  public void setDownloadOnly(Boolean downloadOnly) {
    this.downloadOnly = downloadOnly;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BackupRestore backupRestore = (BackupRestore) o;
    return Objects.equals(this.srcRscName, backupRestore.srcRscName) &&
        Objects.equals(this.srcSnapName, backupRestore.srcSnapName) &&
        Objects.equals(this.lastBackup, backupRestore.lastBackup) &&
        Objects.equals(this.storPoolMap, backupRestore.storPoolMap) &&
        Objects.equals(this.targetRscName, backupRestore.targetRscName) &&
        Objects.equals(this.passphrase, backupRestore.passphrase) &&
        Objects.equals(this.nodeName, backupRestore.nodeName) &&
        Objects.equals(this.downloadOnly, backupRestore.downloadOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(srcRscName, srcSnapName, lastBackup, storPoolMap, targetRscName, passphrase, nodeName, downloadOnly);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BackupRestore {\n");
    
    sb.append("    srcRscName: ").append(toIndentedString(srcRscName)).append("\n");
    sb.append("    srcSnapName: ").append(toIndentedString(srcSnapName)).append("\n");
    sb.append("    lastBackup: ").append(toIndentedString(lastBackup)).append("\n");
    sb.append("    storPoolMap: ").append(toIndentedString(storPoolMap)).append("\n");
    sb.append("    targetRscName: ").append(toIndentedString(targetRscName)).append("\n");
    sb.append("    passphrase: ").append(toIndentedString(passphrase)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    downloadOnly: ").append(toIndentedString(downloadOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
