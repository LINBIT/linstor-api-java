/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.8.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.Properties;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * This structure is used for create physical-storage
 */
@Schema(description = "This structure is used for create physical-storage")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-18T05:15:14.614Z[GMT]")
public class PhysicalStorageStoragePoolCreate {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("props")
  private Properties props = null;

  @JsonProperty("shared_space")
  private String sharedSpace = null;

  @JsonProperty("external_locking")
  private Boolean externalLocking = false;

  public PhysicalStorageStoragePoolCreate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the linstor storage pool
   * @return name
  **/
  @Schema(description = "Name of the linstor storage pool")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PhysicalStorageStoragePoolCreate props(Properties props) {
    this.props = props;
    return this;
  }

   /**
   * Get props
   * @return props
  **/
  @Schema(description = "")
  public Properties getProps() {
    return props;
  }

  public void setProps(Properties props) {
    this.props = props;
  }

  public PhysicalStorageStoragePoolCreate sharedSpace(String sharedSpace) {
    this.sharedSpace = sharedSpace;
    return this;
  }

   /**
   * Name of the shared space
   * @return sharedSpace
  **/
  @Schema(description = "Name of the shared space")
  public String getSharedSpace() {
    return sharedSpace;
  }

  public void setSharedSpace(String sharedSpace) {
    this.sharedSpace = sharedSpace;
  }

  public PhysicalStorageStoragePoolCreate externalLocking(Boolean externalLocking) {
    this.externalLocking = externalLocking;
    return this;
  }

   /**
   * true if a shared storage pool uses linstor-external locking, like cLVM
   * @return externalLocking
  **/
  @Schema(description = "true if a shared storage pool uses linstor-external locking, like cLVM")
  public Boolean isExternalLocking() {
    return externalLocking;
  }

  public void setExternalLocking(Boolean externalLocking) {
    this.externalLocking = externalLocking;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhysicalStorageStoragePoolCreate physicalStorageStoragePoolCreate = (PhysicalStorageStoragePoolCreate) o;
    return Objects.equals(this.name, physicalStorageStoragePoolCreate.name) &&
        Objects.equals(this.props, physicalStorageStoragePoolCreate.props) &&
        Objects.equals(this.sharedSpace, physicalStorageStoragePoolCreate.sharedSpace) &&
        Objects.equals(this.externalLocking, physicalStorageStoragePoolCreate.externalLocking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, props, sharedSpace, externalLocking);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhysicalStorageStoragePoolCreate {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    props: ").append(toIndentedString(props)).append("\n");
    sb.append("    sharedSpace: ").append(toIndentedString(sharedSpace)).append("\n");
    sb.append("    externalLocking: ").append(toIndentedString(externalLocking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
