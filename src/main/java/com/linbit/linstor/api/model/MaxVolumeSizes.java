/*
 * Linstor REST API
 *
 *
 * OpenAPI spec version: 1.22.0
 * Contact: rene.peinthor@linbit.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.linbit.linstor.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.linbit.linstor.api.model.Candidate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * MaxVolumeSizes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-02T13:40:09.628252133Z[Etc/UTC]")

public class MaxVolumeSizes {
  @JsonProperty("candidates")
  private List<Candidate> candidates = null;

  @JsonProperty("default_max_oversubscription_ratio")
  private Double defaultMaxOversubscriptionRatio = null;

  public MaxVolumeSizes candidates(List<Candidate> candidates) {
    this.candidates = candidates;
    return this;
  }

  public MaxVolumeSizes addCandidatesItem(Candidate candidatesItem) {
    if (this.candidates == null) {
      this.candidates = new ArrayList<>();
    }
    this.candidates.add(candidatesItem);
    return this;
  }

   /**
   * Get candidates
   * @return candidates
  **/
  @Schema(description = "")
  public List<Candidate> getCandidates() {
    return candidates;
  }

  public void setCandidates(List<Candidate> candidates) {
    this.candidates = candidates;
  }

  public MaxVolumeSizes defaultMaxOversubscriptionRatio(Double defaultMaxOversubscriptionRatio) {
    this.defaultMaxOversubscriptionRatio = defaultMaxOversubscriptionRatio;
    return this;
  }

   /**
   * Get defaultMaxOversubscriptionRatio
   * @return defaultMaxOversubscriptionRatio
  **/
  @Schema(description = "")
  public Double getDefaultMaxOversubscriptionRatio() {
    return defaultMaxOversubscriptionRatio;
  }

  public void setDefaultMaxOversubscriptionRatio(Double defaultMaxOversubscriptionRatio) {
    this.defaultMaxOversubscriptionRatio = defaultMaxOversubscriptionRatio;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MaxVolumeSizes maxVolumeSizes = (MaxVolumeSizes) o;
    return Objects.equals(this.candidates, maxVolumeSizes.candidates) &&
        Objects.equals(this.defaultMaxOversubscriptionRatio, maxVolumeSizes.defaultMaxOversubscriptionRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidates, defaultMaxOversubscriptionRatio);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MaxVolumeSizes {\n");
    
    sb.append("    candidates: ").append(toIndentedString(candidates)).append("\n");
    sb.append("    defaultMaxOversubscriptionRatio: ").append(toIndentedString(defaultMaxOversubscriptionRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
