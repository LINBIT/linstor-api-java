buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
    }
}

plugins {
    id 'maven-publish'
    id 'idea'
    id 'eclipse'
    id 'java-library'
    id 'signing'
}

group = 'com.linbit.linstor.api'
version = '0.5.2'

repositories {
    mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.register('execute', JavaExec) {
    mainClass = System.getProperty('mainClass')
    classpath = sourceSets.main.runtimeClasspath
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

tasks.register('javadocJar', Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    repositories {
        maven {
            name 'sonatype'

            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

			def user = project.hasProperty('sonatypeUsername') ? sonatypeUsername : "anonymous"
			def pass = project.hasProperty('sonatypePassword') ? sonatypePassword : ""

            credentials {
                username user
                password pass
            }

        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-linstor'
            from components.java
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = 'java-linstor'
                description = 'Linstor REST API library'
                url = 'https://github.com/LINBIT/linstor-api-java'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'rp-'
                        name = 'Rene Peinthor'
                        email = 'rene.peinthor@linbit.com'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/LINBIT/linstor-api-java.git'
                    developerConnection = 'scm:git:https://github.com/LINBIT/linstor-api-java.git'
                    url = 'https://github.com/LINBIT/linstor-api-java'
                }
            }
        }
    }
}

ext {
    swagger_annotations_version = "2.0.0"
    jackson_version = "2.15.2"
    jersey_version = "2.40"
    junit_version = "4.12"

    it.'signing.secretKeyRingFile' = project.findProperty('java-linstor.signing.secretKeyRingFile') ?:
            project.findProperty('signing.secretKeyRingFile')
    it.'signing.password' = project.findProperty('java-linstor.signing.password') ?:
            project.findProperty('signing.password')
    it.'signing.keyId' = project.findProperty('java-linstor.signing.keyId') ?:
            project.findProperty('signing.keyId')
    sonatypeUsername = project.findProperty('java-linstor.sonatype.username') ?:
            project.findProperty('sonatype.username')
    sonatypePassword = project.findProperty('java-linstor.sonatype.password') ?:
            project.findProperty('sonatype.password')
    sonatypeStagingProfileId = project.findProperty('java-linstor.sonatype.stagingProfileId') ?:
            project.findProperty('sonatype.stagingProfileId')
}

dependencies {
    implementation "io.swagger.core.v3:swagger-annotations:$swagger_annotations_version"
    implementation "org.glassfish.jersey.core:jersey-client:$jersey_version"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:$jersey_version"
    implementation "org.glassfish.jersey.media:jersey-media-json-jackson:$jersey_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "javax.activation:activation:1.1.1"
    implementation "org.glassfish.jersey.inject:jersey-hk2:$jersey_version"
    testImplementation "junit:junit:$junit_version"
}

signing {
    required {
        // signing is required if this is a release version and the artifacts are to be published
        !version.endsWith('SNAPSHOT') && tasks.withType(PublishToMavenRepository).find {
            gradle.taskGraph.hasTask it
        }
    }
    sign publishing.publications
}
